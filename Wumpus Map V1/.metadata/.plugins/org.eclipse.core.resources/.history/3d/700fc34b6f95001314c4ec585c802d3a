import java.awt.Point;
import org.apache.commons.lang3.time.StopWatch;

public class Main
{

	public static void main(String[] args)
	{
		//Setup new Board (cave) and replace the default
		//human player with an AI controlled one
		Board gameBoard = new Board(10, 20, 4);
		System.out.println(gameBoard.getGameObject(gameBoard.player.position));
		AI ai = new AI(gameBoard.player.position);
		System.out.println(gameBoard.getGameObject(ai.position));
		gameBoard.player = ai;
		System.out.println(gameBoard.getGameObject(ai.position));
		gameBoard.link();
		System.out.println(gameBoard.getGameObject(ai.position));
		
		//Set up variables required for AI play
		StopWatch timer = new StopWatch();
		String playerStatus = Board.PLAYING;
		int turn = 0, delay = 500;
		
		printMap(gameBoard);
		timer.start();
		
		do
		{
			if(timer.getTime() >= turn * delay)
			{
				turn ++;
				//ai.act();
				//playerStatus = gameBoard.checkPlayerStatus();
				printMap(gameBoard);
			}
		}
		while(playerStatus.equals(Board.PLAYING));
	}
	
	public static void printMap(Board b)
	{
		clear();
		
		Point tempPoint;
		GameObject tempObject;
		
		for(int y = 0; y < b.size; y ++)
		{
			for(int x = 0; x < b.size; x ++)
			{
				tempPoint = new Point(x, y);
				
				if(tempPoint.equals(b.player.position))
				{
					System.out.print("P");
				}
				else if(tempPoint.equals(b.wumpus.position))
				{
					System.out.print("W");
				}
				else
				{
					tempObject = b.getGameObject(tempPoint);
					
					if(tempObject == null)
					{
						System.out.print("X");
					}
					
					if(tempObject instanceof Empty)
					{
						System.out.print(" ");
					}
					else if(tempObject instanceof Pit)
					{
						System.out.print("O");
					}
					else if(tempObject instanceof Superbat)
					{
						System.out.print("B");
					}
					else if(tempObject instanceof Treasure)
					{
						if(!b.player.hasTreasure)
						{	
							System.out.print("T");
						}
						else
						{
							System.out.print(" ");
						}
					}
					else if(tempObject instanceof CaveExit)
					{
						System.out.print("E");
					}
				}
				
				System.out.print(" | ");
			}
			
			System.out.print("\n---------------------------------------\n");
		}
	}
	
	public static void clear()
	{
		for(int c = 0; c < 50; c ++)
		{
			System.out.println();
		}
	}

}
